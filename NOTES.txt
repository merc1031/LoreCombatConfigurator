Ext.Definition.GetAll("ClassDescription")
Has All

S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("ClassDescription")[63], "ClassDescription"))
{
        "AnimationSetPriority" : 0,
        "BaseHp" : 0,
        "CanLearnSpells" : false,
        "CharacterCreationPose" : "0f07ec6e-4ef0-434e-9a51-1353260ccff8",
        "ClassEquipment" : "",
        "ClassHotbarColumns" : 6,
        "CommonHotbarColumns" : 8,
        "Description" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "hf922abcfgb27dg4e38ga879g419b23b374cc",
                        "Version" : 9
                }
        },
        "DisplayName" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "hd736dc8cgf832g44dbg92fag23cd9dc6bd87",
                        "Version" : 1
                }
        },
        "HasGod" : false,
        "HpPerLevel" : 0,
        "IsDefaultForUseSpellAction" : false,
        "IsSomaticWithInstrument" : false,
        "ItemsHotbarColumns" : 2,
        "LearningStrategy" : 1,
        "MulticlassSpellcasterModifier" : 0.0,
        "MustPrepareSpells" : false,
        "Name" : "PathOfTheStormHerald",
        "ParentGuid" : "d8cadb42-0ff9-4049-afaf-e5d78d06a399",
        "PrimaryAbility" : 1,
        "ProgressionTableUUID" : "b11dcb99-712b-417a-8e69-891c47f2ddc2",
        "ResourceUUID" : "728a726d-8df0-48af-aedf-09ec5a14d92c",
        "SoundClassType" : "Barbarian",
        "SpellCastingAbility" : 3,
        "SpellList" : "00000000-0000-0000-0000-000000000000",
        "SubclassTitle" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "Tags" : [],
        "Unused" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "field_71" : 0
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("ClassDescription")[64], "ClassDescription"))
{
        "AnimationSetPriority" : 0,
        "BaseHp" : 0,
        "CanLearnSpells" : false,
        "CharacterCreationPose" : "0f07ec6e-4ef0-434e-9a51-1353260ccff8",
        "ClassEquipment" : "",
        "ClassHotbarColumns" : 6,
        "CommonHotbarColumns" : 8,
        "Description" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "h4006bb04g1504g42c0gb89ag282244a3df9d",
                        "Version" : 3
                }
        },
        "DisplayName" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "h4db71550g5be9g49cfg8517gdbaeaebb46bb",
                        "Version" : 1
                }
        },
        "HasGod" : false,
        "HpPerLevel" : 0,
        "IsDefaultForUseSpellAction" : false,
        "IsSomaticWithInstrument" : false,
        "ItemsHotbarColumns" : 2,
        "LearningStrategy" : 1,
        "MulticlassSpellcasterModifier" : 0.0,
        "MustPrepareSpells" : false,
        "Name" : "AstralSelf",
        "ParentGuid" : "c4598bdb-fc07-40dd-a62c-90cc138bd76f",
        "PrimaryAbility" : 2,
        "ProgressionTableUUID" : "44a8291a-3bf4-4f92-8002-8c25db356c4b",
        "ResourceUUID" : "4cbcab30-4854-4473-9784-2170daa055ef",
        "SoundClassType" : "Monk",
        "SpellCastingAbility" : 5,
        "SpellList" : "00000000-0000-0000-0000-000000000000",
        "SubclassTitle" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "Tags" : [],
        "Unused" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "field_71" : 106
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("ClassDescription")[65], "ClassDescription"))
{
        "AnimationSetPriority" : 0,
        "BaseHp" : 0,
        "CanLearnSpells" : false,
        "CharacterCreationPose" : "0f07ec6e-4ef0-434e-9a51-1353260ccff8",
        "ClassEquipment" : "",
        "ClassHotbarColumns" : 6,
        "CommonHotbarColumns" : 8,
        "Description" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "hcc476c7dg5090g4ca3g92a4gbb272db8224d",
                        "Version" : 1
                }
        },
        "DisplayName" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "h38b1cd9fg94d3g4501g9aebg761ad6decf6d",
                        "Version" : 1
                }
        },
        "HasGod" : false,
        "HpPerLevel" : 0,
        "IsDefaultForUseSpellAction" : false,
        "IsSomaticWithInstrument" : false,
        "ItemsHotbarColumns" : 2,
        "LearningStrategy" : 1,
        "MulticlassSpellcasterModifier" : 0.0,
        "MustPrepareSpells" : false,
        "Name" : "Reaper",
        "ParentGuid" : "c4598bdb-fc07-40dd-a62c-90cc138bd76f",
        "PrimaryAbility" : 2,
        "ProgressionTableUUID" : "a4b59b58-7512-4698-8598-e3a34cddb8bb",
        "ResourceUUID" : "35427743-f804-455e-92f6-fa56d486858f",
        "SoundClassType" : "Monk",
        "SpellCastingAbility" : 5,
        "SpellList" : "00000000-0000-0000-0000-000000000000",
        "SubclassTitle" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "Tags" : [],
        "Unused" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "field_71" : 0
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("ClassDescription")[69], "ClassDescription"))
{
        "AnimationSetPriority" : 0,
        "BaseHp" : 0,
        "CanLearnSpells" : false,
        "CharacterCreationPose" : "0f07ec6e-4ef0-434e-9a51-1353260ccff8",
        "ClassEquipment" : "",
        "ClassHotbarColumns" : 6,
        "CommonHotbarColumns" : 8,
        "Description" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "h6d1dc009g6659g4031g9d2fgd0bd8bb8b8d6",
                        "Version" : 1
                }
        },
        "DisplayName" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "h6a7e7924g21bag40bcg9600gb80ff0c79d3f",
                        "Version" : 1
                }
        },
        "HasGod" : false,
        "HpPerLevel" : 0,
        "IsDefaultForUseSpellAction" : false,
        "IsSomaticWithInstrument" : false,
        "ItemsHotbarColumns" : 2,
        "LearningStrategy" : 1,
        "MulticlassSpellcasterModifier" : 0.0,
        "MustPrepareSpells" : true,
        "Name" : "CircleofStars",
        "ParentGuid" : "457d0a6e-9da8-4f95-a225-18382f0e94b5",
        "PrimaryAbility" : 5,
        "ProgressionTableUUID" : "9b2a7e3c-7191-4f37-a428-ba7413f97af4",
        "ResourceUUID" : "5ef8c19d-cb24-4192-83bf-5db9593c7fde",
        "SoundClassType" : "Druid",
        "SpellCastingAbility" : 5,
        "SpellList" : "00000000-0000-0000-0000-000000000000",
        "SubclassTitle" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "Tags" : [],
        "Unused" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "field_71" : 0
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("ClassDescription")[80], "ClassDescription"))
{
        "AnimationSetPriority" : 0,
        "BaseHp" : 0,
        "CanLearnSpells" : false,
        "CharacterCreationPose" : "0f07ec6e-4ef0-434e-9a51-1353260ccff8",
        "ClassEquipment" : "",
        "ClassHotbarColumns" : 6,
        "CommonHotbarColumns" : 8,
        "Description" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "samuraidesc",
                        "Version" : 1
                }
        },
        "DisplayName" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "samuraiclass",
                        "Version" : 1
                }
        },
        "HasGod" : false,
        "HpPerLevel" : 0,
        "IsDefaultForUseSpellAction" : false,
        "IsSomaticWithInstrument" : false,
        "ItemsHotbarColumns" : 2,
        "LearningStrategy" : 1,
        "MulticlassSpellcasterModifier" : 0.0,
        "MustPrepareSpells" : false,
        "Name" : "Samurai",
        "ParentGuid" : "721dfac3-92d4-41f5-b773-b7072a86232f",
        "PrimaryAbility" : 1,
        "ProgressionTableUUID" : "33a5a323-cab6-447a-b0f5-c9c6262ae4f3",
        "ResourceUUID" : "4a9878a2-b7d4-4fe7-b89c-c6ddfd3ab4ce",
        "SoundClassType" : "Fighter",
        "SpellCastingAbility" : 0,
        "SpellList" : "00000000-0000-0000-0000-000000000000",
        "SubclassTitle" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "Tags" : [],
        "Unused" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "field_71" : 0
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("ClassDescription")[23], "ClassDescription"))
{
        "AnimationSetPriority" : 0,
        "BaseHp" : 0,
        "CanLearnSpells" : false,
        "CharacterCreationPose" : "0f07ec6e-4ef0-434e-9a51-1353260ccff8",
        "ClassEquipment" : "",
        "ClassHotbarColumns" : 6,
        "CommonHotbarColumns" : 8,
        "Description" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "h2accac8fg28eeg4d85gb412g2f6f8ec2d756",
                        "Version" : 1
                }
        },
        "DisplayName" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "hd3d0e53ag76a8g4275g98b2g751f2c421b8a",
                        "Version" : 1
                }
        },
        "HasGod" : false,
        "HpPerLevel" : 0,
        "IsDefaultForUseSpellAction" : false,
        "IsSomaticWithInstrument" : false,
        "ItemsHotbarColumns" : 2,
        "LearningStrategy" : 1,
        "MulticlassSpellcasterModifier" : 0.0,
        "MustPrepareSpells" : false,
        "Name" : "BeastMaster",
        "ParentGuid" : "36be18ba-23db-4dff-bfa6-ae105ce43144",
        "PrimaryAbility" : 2,
        "ProgressionTableUUID" : "1ba04e99-e329-471d-a656-bbd5a363d7c8",
        "ResourceUUID" : "6fd9547d-cc28-400e-bfa9-3a85baa70f24",
        "SoundClassType" : "Ranger",
        "SpellCastingAbility" : 5,
        "SpellList" : "00000000-0000-0000-0000-000000000000",
        "SubclassTitle" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "Tags" :
        [
                "bfaccaca-e512-43ea-89cc-372b5d1925ee"
        ],
        "Unused" :
        {
                "ArgumentString" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                },
                "Handle" :
                {
                        "Handle" : "ls::TranslatedStringRepository::s_HandleUnknown",
                        "Version" : 0
                }
        },
        "field_71" : 0
}

Ext.Definition.GetAll("Progression")

S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("Progression")[1], "Progression"))
{
        "AddSpells" : [],
        "AllowImprovement" : false,
        "Boosts" : "ProficiencyBonus(SavingThrow,Strength);ProficiencyBonus(SavingThrow,Constitution);Proficiency(LightArmor);Proficiency(MediumArmor);Proficiency(Shields);Proficiency(SimpleWeapons);Proficiency(MartialWeapons);ActionResource(Rage,2,0)",
        "IsMulticlass" : false,
        "Level" : 1,
        "Name" : "Barbarian",
        "PassivesAdded" : "RageUnlock;UnarmouredDefence_Barbarian;Rage_Armour_Message;Rage_NoHeavyArmour_VFX",
        "PassivesRemoved" : "",
        "ProgressionType" : 0,
        "ResourceUUID" : "a2198ee9-ea4c-468e-b6b4-22b32d37806e",
        "SelectAbilities" : [],
        "SelectAbilityBonus" :
        [
                {
                        "Amount" : 2,
                        "Amounts" :
                        [
                                2,
                                1
                        ],
                        "BonusType" : "AbilityBonus",
                        "UUID" : "b9149c8e-52c8-46e5-9cb6-fc39301c05fe"
                }
        ],
        "SelectEquipment" : [],
        "SelectPassives" : [],
        "SelectSkills" :
        [
                {
                        "Amount" : 2,
                        "Arg3" : "",
                        "UUID" : "233793b3-838a-4d4e-9d68-1e0a1089aba5"
                }
        ],
        "SelectSkillsExpertise" : [],
        "SelectSpells" : [],
        "SubClasses" : [],
        "TableUUID" : "60bbcc97-5381-4898-bc15-908c072895de",
        "field_D0" : []
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("Progression")[2], "Progression"))
{
        "AddSpells" : [],
        "AllowImprovement" : true,
        "Boosts" : "",
        "IsMulticlass" : false,
        "Level" : 2,
        "Name" : "Barbarian",
        "PassivesAdded" : "DangerSense;RecklessAttack",
        "PassivesRemoved" : "",
        "ProgressionType" : 0,
        "ResourceUUID" : "89986e8a-09b1-4163-b1d0-ddb2332bf3c5",
        "SelectAbilities" : [],
        "SelectAbilityBonus" : [],
        "SelectEquipment" : [],
        "SelectPassives" : [],
        "SelectSkills" : [],
        "SelectSkillsExpertise" : [],
        "SelectSpells" : [],
        "SubClasses" : [],
        "TableUUID" : "60bbcc97-5381-4898-bc15-908c072895de",
        "field_D0" : []
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("Progression")[3], "Progression"))
{
        "AddSpells" : [],
        "AllowImprovement" : false,
        "Boosts" : "ActionResource(Rage,1,0)",
        "IsMulticlass" : false,
        "Level" : 3,
        "Name" : "Barbarian",
        "PassivesAdded" : "",
        "PassivesRemoved" : "",
        "ProgressionType" : 0,
        "ResourceUUID" : "0d4a6b4b-8162-414b-81ef-1838e36e778a",
        "SelectAbilities" : [],
        "SelectAbilityBonus" : [],
        "SelectEquipment" : [],
        "SelectPassives" : [],
        "SelectSkills" : [],
        "SelectSkillsExpertise" : [],
        "SelectSpells" : [],
        "SubClasses" :
        [
                "32eee7d8-1b2f-4de5-b9ee-78fbd286c6ef",
                "05c272ce-2dc2-42f5-b688-d0eb40d8a078",
                "460fcfa7-5219-4ab4-9151-2dd813e82d14",
                "728a726d-8df0-48af-aedf-09ec5a14d92c",
                "d6bf00fc-3518-4d63-ba8b-03532c1abc4d",
                "2e585948-d775-451d-b58b-15b75321d11e"
        ],
        "TableUUID" : "60bbcc97-5381-4898-bc15-908c072895de",
        "field_D0" : []
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("Progression")[6], "Progression"))
{
        "AddSpells" :
        [
                {
                        "Ability" : "None",
                        "ActionResource" : "d136c5d9-0ff0-43da-acce-a74a07f8d6bf",
                        "ClassUUID" : "00000000-0000-0000-0000-000000000000",
                        "CooldownType" : "Default",
                        "PrepareType" : "Unknown",
                        "SelectorId" : " ",
                        "SpellUUID" : "17803035-4762-4143-8f2f-1143d47e4f40"
                }
        ],
        "AllowImprovement" : false,
        "Boosts" : "",
        "IsMulticlass" : false,
        "Level" : 3,
        "Name" : "BerserkerPath",
        "PassivesAdded" : "RageFrenzyUnlock",
        "PassivesRemoved" : "RageUnlock",
        "ProgressionType" : 1,
        "ResourceUUID" : "5ce67263-04f2-4ede-b30a-2eb962d828f2",
        "SelectAbilities" : [],
        "SelectAbilityBonus" : [],
        "SelectEquipment" : [],
        "SelectPassives" : [],
        "SelectSkills" : [],
        "SelectSkillsExpertise" : [],
        "SelectSpells" : [],
        "SubClasses" : [],
        "TableUUID" : "b2a03b63-809f-4df9-a179-bf5b899082ef",
        "field_D0" : []
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("Progression")[10], "Progression"))
{
        "AddSpells" : [],
        "AllowImprovement" : false,
        "Boosts" : "ActionResource(BardicInspiration,3,0);ActionResource(SpellSlot,2,1);ProficiencyBonus(SavingThrow,Dexterity);ProficiencyBonus(SavingThrow,Charisma);Proficiency(LightArmor);Proficiency(SimpleWeapons);Proficiency(HandCrossbows);Proficiency(Longsword,
        "IsMulticlass" : false,
        "Level" : 1,
        "Name" : "Bard",
        "PassivesAdded" : "BardicInspiration;BardSpellcasting;UnlockedSpellSlotLevel1",
        "PassivesRemoved" : "",
        "ProgressionType" : 0,
        "ResourceUUID" : "374c3aae-828b-44d8-b4e3-51ba802977dd",
        "SelectAbilities" : [],
        "SelectAbilityBonus" :
        [
                {
                        "Amount" : 2,
                        "Amounts" :
                        [
                                2,
                                1
                        ],
                        "BonusType" : "AbilityBonus",
                        "UUID" : "b9149c8e-52c8-46e5-9cb6-fc39301c05fe"
                }
        ],
        "SelectEquipment" :
        [
                {
                        "Amount" : 1,
                        "Arg3" : "BardInstrument",
                        "UUID" : "aab8c5b5-eacf-4867-8e5f-bd4de3a9132e"
                }
        ],
        "SelectPassives" : [],
        "SelectSkills" :
        [
                {
                        "Amount" : 3,
                        "Arg3" : "",
                        "UUID" : "ed664663-93b9-4070-a54b-3c7b19c0e7b4"
                }
        ],
        "SelectSkillsExpertise" : [],
        "SelectSpells" :
        [
                {
                        "ActionResource" : "d136c5d9-0ff0-43da-acce-a74a07f8d6bf",
                        "Amount" : 2,
                        "Arg3" : 0,
                        "CastingAbility" : "None",
                        "ClassUUID" : "00000000-0000-0000-0000-000000000000",
                        "CooldownType" : "Default",
                        "PrepareType" : "AlwaysPrepared",
                        "SelectorId" : "BardCantrip",
                        "SpellUUID" : "61f79a30-2cac-4a7a-b5fe-50c89d307dd6"
                },
                {
                        "ActionResource" : "d136c5d9-0ff0-43da-acce-a74a07f8d6bf",
                        "Amount" : 4,
                        "Arg3" : 0,
                        "CastingAbility" : "None",
                        "ClassUUID" : "00000000-0000-0000-0000-000000000000",
                        "CooldownType" : "Default",
                        "PrepareType" : "Unknown",
                        "SelectorId" : "BardSpells",
                        "SpellUUID" : "dcb45167-86bd-4297-9b9d-c295be51af5b"
                }
        ],
        "SubClasses" : [],
        "TableUUID" : "229c98da-2cd1-4a5e-8051-9d90ec7931e7",
        "field_D0" : []
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("Progression")[9], "Progression"))
{
        "AddSpells" : [],
        "AllowImprovement" : false,
        "Boosts" : "",
        "IsMulticlass" : false,
        "Level" : 5,
        "Name" : "TotemWarriorPath",
        "PassivesAdded" : "",
        "PassivesRemoved" : "",
        "ProgressionType" : 1,
        "ResourceUUID" : "0fe6f4ec-8601-462d-a233-53fc0ad62513",
        "SelectAbilities" : [],
        "SelectAbilityBonus" : [],
        "SelectEquipment" : [],
        "SelectPassives" :
        [
                {
                        "Amount" : 0,
                        "Amount2" : 1,
                        "Arg3" : "TotemWarriorPassiveReplace",
                        "UUID" : "7f7340a0-faf3-4122-bd3f-37a5434dd6cf"
                }
        ],
        "SelectSkills" : [],
        "SelectSkillsExpertise" : [],
        "SelectSpells" : [],
        "SubClasses" : [],
        "TableUUID" : "48f1760f-86e7-401c-ad52-633fffbae49e",
        "field_D0" : []
}
S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("Progression")[11], "Progression"))
{
        "AddSpells" :
        [
                {
                        "Ability" : "None",
                        "ActionResource" : "d136c5d9-0ff0-43da-acce-a74a07f8d6bf",
                        "ClassUUID" : "00000000-0000-0000-0000-000000000000",
                        "CooldownType" : "Default",
                        "PrepareType" : "Unknown",
                        "SelectorId" : " ",
                        "SpellUUID" : "80225e21-5acd-4122-b779-488dae33a31c"
                }
        ],
        "AllowImprovement" : true,
        "Boosts" : "ActionResource(SpellSlot,1,1)",
        "IsMulticlass" : false,
        "Level" : 2,
        "Name" : "Bard",
        "PassivesAdded" : "JackOfAllTrades",
        "PassivesRemoved" : "",
        "ProgressionType" : 0,
        "ResourceUUID" : "7a2f66b5-7555-49f2-833b-f3d79affc7ca",
        "SelectAbilities" : [],
        "SelectAbilityBonus" : [],
        "SelectEquipment" : [],
        "SelectPassives" : [],
        "SelectSkills" : [],
        "SelectSkillsExpertise" : [],
        "SelectSpells" :
        [
                {
                        "ActionResource" : "d136c5d9-0ff0-43da-acce-a74a07f8d6bf",
                        "Amount" : 1,
                        "Arg3" : 1,
                        "CastingAbility" : "None",
                        "ClassUUID" : "00000000-0000-0000-0000-000000000000",
                        "CooldownType" : "Default",
                        "PrepareType" : "Unknown",
                        "SelectorId" : "BardSpells",
                        "SpellUUID" : "dcb45167-86bd-4297-9b9d-c295be51af5b"
                }
        ],
        "SubClasses" : [],
        "TableUUID" : "229c98da-2cd1-4a5e-8051-9d90ec7931e7",
        "field_D0" : []
}

Ext.Definition.GetAll("SpellList")

S >> _D(Ext.Definition.Get(Ext.Definition.GetAll("SpellList")[1], "SpellList"))
{
        "ResourceUUID" : "2f43a103-5bf1-4534-b14f-663decc0c525",
        "Spells" :
        [
                "Shout_BladeWard",
                "Target_Guidance",
                "Target_Light",
                "Shout_ProduceFlame",
                "Target_Resistance",
                "Target_SacredFlame",
                "Target_SpareTheDying",
                "Shout_Thaumaturgy",
                "Target_TollTheDead",
                "Shout_WordOfRadiance"
        ]
}

-- Found in ["ServerCharacter"]["Character"]["Template"]["CombatComponent"]["AiHint"]
-- Found in ["ServerCharacter"]["Character"]["Template"]["CombatComponent"]["Archetype"]



```
---@param target any The target character EntityProxy
---@return table|nil
local function GetCombatEntities(target)
    if target == nil then return nil end
    local combatParticipant = target:GetComponent("CombatParticipant") --[[@as CombatParticipantComponent]]
    if combatParticipant and combatParticipant.CombatHandle then
        local combatState = combatParticipant.CombatHandle:GetComponent("CombatState") --[[@as CombatStateComponent]]
        if combatState then
            return combatState.Participants
        end
    end
end
```


--[[
local opts = {
    Beautify = true,
    StringifyInternalTypes = true,
    IterateUserdata = true,
    AvoidRecursion = fasle,
}
Ext.IO.SaveFile("RootClasses.json", Ext.Json.Stringify(Mods.LCC.FindRootClasses(), opts))
Ext.IO.SaveFile("SpellsByClass.json", Ext.Json.Stringify(Mods.LCC.GenerateSpellLists(Mods.LCC.BlacklistedAbilitiesByClass, Mods.LCC.BlacklistedAbilities, Mods.LCC.BlacklistedLists, Mods.LCC.FindRootClasses()), opts))
Ext.IO.SaveFile("PassivesByClass.json", Ext.Json.Stringify(Mods.LCC.GeneratePassiveLists(Mods.LCC.BlacklistedPassivesByClass, Mods.LCC.BlacklistedPassives, Mods.LCC.BlacklistedLists, Mods.LCC.FindRootClasses()), opts))
]]--

-- SpellSchool
Transmutation
Evocation
Abjuration
Divination
Conjuration
Illusion
Necromancy
Enchantment

None
```
bg3 rg --no-filename 'data "SpellSchool"' | cut -f3- -d' ' | sort | uniq -c
    141 ""
     38 "Abjuration"
     50 "Conjuration"
     13 "Divination"
     36 "Enchantment"
     72 "Evocation"
     15 "Illusion"
     46 "Necromancy"
     64 "None"
     73 "Transmutation"
```
-- VerbalIntent
Utility
Damage
Control
Buff
Debuff
Summon
Healing
-- SpellFlags
IsSpell
IsAttack
CannotTargetCharacter
CannotTargetItems
Invisible
IsMelee
Wildshape -- do shouts have this?
IsHarmful
CannotTargetTerrain
HasHighGroundRangeExtension
RangeIgnoreVerticalThreshold
IgnoreVisionBlock
IsEnemySpell
IsConcentration
HasVerbalComponent
NoCooldownOnMiss
IsSwarmAttack
IgnoreSilence
HasSomaticComponent
AddFallDamageOnLand
IsDefaultWeaponAction
IsLinkedSpellContainer
CanDualWield
Temporary
DisableBlood
Stealth
ImmediateCast
UnavailableInDialogs
NoCameraMove
-- AIFlags
CanNotUse -- seems important


Character stats have progressions???


-- hag pots for _, t in ipairs({"27d74bd9-b852-43fd-98ac-999f33e05aa9", "2a507888-cf2b-425a-8920-dc0ca35cfa2e", "9d98eb5a-08c1-471a-84d5-76dbb098f160", "d4fc499a-945e-4e0b-a4db-ba6157281616", "44da51b6-6d05-488c-9097-99dd6c795ed3", "920dcb59-b732-4d97-ae1a-fadbb5955fe5", "a46558fe-54a8-4720-a12e-7470e072a9d7", "b1b5590b-e246-4e33-acaa-5984b2e2306f", "0e54d347-dffa-4d13-92c0-74c82decefba", "4d37061a-901d-47d7-9c11-4237e34b98a1", "3575950d-c41a-448d-bb2d-cd08c78c88c6"}) do Osi.TemplateAddTo("79dfb371-cd87-48f3-b542-26db2d39cfe2", "S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", 3, 1) end

-- local rootTemplate = "742d43ff-b74d-4cbe-9554-51773bbccdc2"
--                                                x  y  z  playSpawn  finishedEvent
-- local newItemGuid = Osi.CreateAt(rootTemplate, 0, 0, 0, 0, 0, "")
-- Osi.IsProficientWith(entityGuid, newItemGuid)
-- if false
-- for each group AddBoostAdv(entityGuid, string.format("Proficiency(%s)", template.stat.ProficiencyGroup)
-- Osi.Equip(entityGuid, newItemGuid)

-- Proficiency Boost
-- Proficiency(LightArmor)

-- ProficiencyBonus Boost
-- ProficiencyBonus(SavingThrow, Wisdom)

-- ProficiencyBonus Boost
-- ProficiencyBonus(Skill, Athletics)

Osi.AddSpell("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "Projectile_Jump")

AiArchetypeOverride(ainame, priority_integer)

All Template Types
```
{
        "CombinedLight" : true,
        "LevelTemplate" : true,
        "Schematic" : true,
        "Spline" : true,
        "TileConstruction" : true,
        "character" : true,
        "constellation" : true,
        "constellationHelper" : true,
        "decal" : true,
        "fogVolume" : true,
        "item" : true,
        "light" : true,
        "lightProbe" : true,
        "prefab" : true,
        "projectile" : true,
        "scenery" : true,
        "surface" : true,
        "terrain" : true,
        "trigger" : true
}
```


AI overrides
```
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"hag_green"
S >>
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(melee_stupid, 1)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"melee_stupid"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(melee_smart, 99)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"melee_smart"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(melee_stupid, 1)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"melee_smart"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(ranged_smart, 1)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"melee_smart"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(ranged_stupid, 99)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"melee_smart"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(ranged_smart, 100)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"ranged_smart"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(mage, 1)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"ranged_smart"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(mage, 100)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"ranged_smart"
S >> Mods.LCC.AddBoostsAdv("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d", "AiArchetypeOverride(mage, 101)", "07b97dbc-897a-4c13-a1b0-47f142a47fe8")
S >> _D(Osi.GetActiveArchetype("S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d"))
"mage"
```


At load in hags cavern these are all archetypes from root templates

```
{
        "Act2_COL_Ketheric" : true,
        "Act2_GLO_Nightsong" : true,
        "Base" : true,
        "act1_wyll" : true,
        "act2_Jaheira" : true,
        "act2_SHA_LastJusticiar" : true,
        "act2_TWN_surgeon" : true,
        "act2_TWN_surgeon_nurse" : true,
        "act3_LOW_Guildhall_NineFingers" : true,
        "act3_LOW_Raphael" : true,
        "act3_LOW_SteelWatcher_Titan" : true,
        "act3_LOW_cazador" : true,
        "act3_LOW_ghost_nurse" : true,
        "act3_WYR_Dribbles_Thug" : true,
        "act3_WYR_Gortash_ranged" : true,
        "apostle" : true,
        "base" : true,
        "beast" : true,
        "beast_ranged" : true,
        "beholder" : true,
        "cloaker_phantasm" : true,
        "deathKnight" : true,
        "deathShepherd" : true,
        "dragon" : true,
        "drider" : true,
        "fey_mastiff" : true,
        "goblin_mage" : true,
        "goblin_melee" : true,
        "goblin_ranged" : true,
        "golem_adamantine" : true,
        "hag_green" : true,
        "healer_melee" : true,
        "healer_ranged" : true,
        "hookhorror" : true,
        "imp_melee" : true,
        "koboldinventor_drunk" : true,
        "mage" : true,
        "mage_no_inventory_items" : true,
        "mage_smart" : true,
        "melee" : true,
        "melee_large" : true,
        "melee_magic" : true,
        "melee_magic_smart" : true,
        "melee_smart" : true,
        "melee_stupid" : true,
        "merregon" : true,
        "mimic" : true,
        "mindflayer" : true,
        "minotaur" : true,
        "monk_melee" : true,
        "myconid_ranged" : true,
        "ogre_melee" : true,
        "orthon_ranged" : true,
        "owlbear" : true,
        "ranged" : true,
        "ranged_smart" : true,
        "ranged_stupid" : true,
        "rogue" : true,
        "scryingeye" : true,
        "shadow" : true,
        "shadow_mastiff" : true,
        "shadow_parents" : true,
        "steel_watcher_biped" : true,
        "zombie" : true
}
```



NOT WORKING (doesnt seem to run AND when run manually crashes to desktop)
```

function OnStatsLoaded()
    local sessionContext = {
        VarsJson = {},
    }
    if Ext.Debug.IsDeveloperMode() then
        sessionContext.VarsJson.Verbosity = 4
    end
    local Log = function(level, str) _Log(SessionContext, level, str) end

    local allSpellNames = Ext.Stats.GetStats("SpellData")
    Log(1, string.format("OnStatsLoaded: count %s", #allSpellNames))
    for _, spellName in ipairs(allSpellNames) do
        local _spellData = Ext.Stats.Get(spellName)

        local newSpellName = string.format("LCC_%s", spellName)

        Ext.Stats.Create(newSpellName, "SpellData", spellName)

        local newSpell = Ext.Stats.Get(newSpellName)

        if newSpell ~= nil then
            Log(2, string.format("Create newSpell: %s from %s", newSpellName, spellName))
            if newSpell.SpellContainerID ~= "" then
                local newSpellContainerID = string.format("LCC_%s", newSpell.SpellContainerID)

                Log(3, string.format("Setting newSpell: %s SpellContainerID from %s to %s", newSpellName, newSpell.SpellContainerID, newSpellContainerID))

                newSpell.SpellContainerID = newSpellContainerID
            end

            if newSpell.ContainerSpells ~= "" then
                local containerSpells = Split(newSpell.ContainerSpells, ";")
                local newContainerSpells = {}
                for _, containerSpell in ipairs(containerSpells) do
                    local newContainerSpell = string.format("LCC_%s", containerSpell)
                    table.insert(newContainerSpells, newContainerSpell)
                end
                Log(3, string.format("Setting newSpell: %s ContainerSpells from %s to %s", newSpellName, newSpell.ContainerSpells, newContainerSpells))
                newSpell.ContainerSpells = table.concat(newContainerSpells, ";")
            end
            newSpell:Sync()
        end
    end
end

Ext.Events.StatsLoaded:Subscribe(OnStatsLoaded)
```


Anothe degenerate
LoreCombatConfigurator: Give: Guid: c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3
LoreCombatConfigurator: Give: Guid: c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3; Modified?: false; Party?: false; Follower?: false; Enemy?: false; Origin?: false; Boss?: false; OurSummon?: false

LoreCombatConfigurator: Recomputing lists
LoreCombatConfigurator: Give: Guid: c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3; Entity (02000001000000c0)

LoreCombatConfigurator: Give: AiHint: 00000000-0000-0000-0000-000000000000 (nil) Archetype: base

LoreCombatConfigurator: Give: Kinds: []; Classes: []; Restrictions []

LoreCombatConfigurator:     Allies applying for Guid: c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3

_D(Mods.LCC.Map(function (e) return e.Passive.PassiveId end, Ext.Entity.Get("S_CHA_Exterior_Bandit_Melee_01_538e38b9-e3a4-452a-8369-60eb1fe8c40d").PassiveContainer.Passives))
_D(Mods.LCC.Map(function(b) return b:GetAllComponents() end, Mods.LCC.Flatten(Mods.LCC.Map(function (cpp) return Ext.Types.Serialize(cpp) end, Mods.LCC.Values(Ext.Entity.Get("5c5bd50b-147e-42e5-93cb-59a754df91ec").BoostsContainer.Boosts)))))

function OnStatsLoaded()
    print("OnStatsLoaded")
    for _, passiveName in ipairs(Ext.Stats.GetStats("PassiveData")) do
        local passiveData = Ext.Stats.Get(passiveName)
        if passiveData ~= nil then
            local newPassiveName = string.format("LCC_%s", passiveName)
            Ext.Stats.Create(newPassiveName, "PassiveData", passiveName)
            local newPassiveData = Ext.Stats.Get(newPassiveName)
            if newPassiveData ~= nil then
                newPassiveData:Sync()
            end
        end
    end
end

Ext.Events.StatsLoaded:Subscribe(OnStatsLoaded)

---@param target any The target character EntityProxy
---@return table|nil
local function GetCombatEntities(target)
    if target == nil then return nil end
    local combatParticipant = target:GetComponent("CombatParticipant") --[[@as CombatParticipantComponent]]
    if combatParticipant and combatParticipant.CombatHandle then
        local combatState = combatParticipant.CombatHandle:GetComponent("CombatState") --[[@as CombatStateComponent]]
        if combatState then
            return combatState.Participants
        end
    end
end


-- local combatCharacters = Osi.DB_Is_InCombat:Get(nil, nil)
-- DB_Is_InCombat(entityGUID, combatGUID)

-- I think I found a pretty simple way by just using Osi.CombatGetGuidFor(object) ~= nil to check if in combat
---@param target any The target character EntityProxy
---@return table|nil
local function GetCombatEntities(target)
    if target == nil then return nil end
    local combatParticipant = target:GetComponent("CombatParticipant") --[[@as CombatParticipantComponent]]
    if combatParticipant and combatParticipant.CombatHandle then
        local combatState = combatParticipant.CombatHandle:GetComponent("CombatState") --[[@as CombatStateComponent]]
        if combatState then
            return combatState.Participants
        end
    end
end




Order seems to be
Load Save Game initial

LoadModule -> LoadSession
...
OnSessionLoaded
...
LoadSession -> LoadLevel
...
Sync -> Running


Load Save Game from Save game
....


Running -> UnloadLevel
...
UnloadSession -> LoadSession
...
LoadSession -> LoadLevel



List Boosts
_D(Mods.LCC.Filter(function(bi) return bi.Cause.Cause == Mods.LCC.ModName end, Mods.LCC.Map(function(b) return b.BoostInfo end, Mods.LCC.Flatten(Mods.LCC.Map(function(cpp) return Ext.Types.Serialize(cpp) end, Mods.LCC.Values(Ext.Entity.Get("ed103005-fd71-457d-ae6c-39654bbd8f2e").BoostsContainer.Boosts))))))

List Passives
_D(Mods.LCC.Map(function(p) return p.Passive.PassiveId end, Ext.Entity.Get("5c5bd50b-147e-42e5-93cb-59a754df91ec").PassiveContainer.Passives))


Tutorial cambions are
Stats: { Cambion _Fiend _Base } AiArchetype melee

Zhalk is
Stats: { TUT_CambionCommander TUT_Cambion_NoCrits Cambion _Fiend _Base } AiArchetype cinematic_melee

Imps in Helm are
Stats: {Imp_Weak Imp _Devil _Fiend _Base} AiArchetype imp_ranged

Ext.Entity.Subscribe("Health", function(entity, component, flags)
        SessionContext.Log(4, string.format("Health event for: %s %s %s", entity.Uuid.EntityUuid, flags, J(component)))
    end
)

Ext.Entity.Subscribe("BaseHp", function(entity, component, flags)
        SessionContext.Log(4, string.format("BaseHp event for: %s %s %s", entity.Uuid.EntityUuid, flags, J(component)))
    end
)

From Eagle
data "Flags" "Floating;FloatingWhileMoving"

in xml
					<attribute id="CanClimbLadders" type="bool" value="True" />
					<attribute id="CanFight" type="bool" value="True" />

						<node id="Tags">
							<children>
								<node id="Tag">
									<attribute id="Object" type="guid" value="801bd716-0666-4dd5-b449-45ffa9a52a0f" />
								</node>
								<node id="Tag">
									<attribute id="Object" type="guid" value="8803503b-64e0-49dd-ba5b-0c4f2c5cc0b5" />
								</node



BG3 Base
new entry "_Base"
type "Character"
data "Level" "1"
data "Strength" "10"
data "Dexterity" "10"
data "Constitution" "10"
data "Intelligence" "10"
data "Wisdom" "10"
data "Charisma" "10"
data "Armor" "10"
data "Vitality" "5"
data "XPReward" "810b5510-6748-4c8e-bef0-d990880ed1dd"
data "Sight" "1600"
data "Hearing" "1100"
data "FOV" "90"
data "Weight" "50"
data "StepsType" "Bare"
data "DefaultBoosts" "BlockRegainHP(Undead;Construct)"
data "PathInfluence" "BloodElectrified,100;BloodFrozen,30;Lava,700;Fire,40;HolyFire,40;Hellfire,100;PoisonCloud,70;WyvernPoison,70;DrowPoisonCloud,70;PurpleWormPoison,70;SerpentVenom,70;InvisibleGithAcid,70;CloudkillCloud,70;MaliceCloud,70;CrawlerMucusCloud,70;WaterElectrified,100;WaterFrozen,30;Grease,30;Web,30;Vines,40;SporeBlackCloud,100;WaterCloudElectrified,40;SporeGreenCloud,40;Acid,30;CausticBrine,40;DarknessCloud,30;FogCloud,30;Mud,30;Oil,30;Poison,30;SpikeGrowth,40;SporePinkCloud,40;StinkingCloud,40"
data "ProficiencyBonusScaling" "265d62c4-9b82-4ed6-9a86-da675b4ef8fe"
data "SpellCastingAbility" "Intelligence"
data "UnarmedAttackAbility" "Strength"
data "UnarmedRangedAttackAbility" "Strength"
data "ActionResources" "ActionPoint:1;BonusActionPoint:1;Movement:9;ReactionActionPoint:1"
data "Passives" "AttackOfOpportunity;DarknessRules"
data "MinimumDetectionRange" "2"
data "DarkvisionRange" "0"
data "FallingHitEffect" "VFX_Combat_Bludgeoning_Damage_Blood_01"
data "FallingLandEffect" "VFX_Combat_Force_Land_01"
data "DifficultyStatuses" "STATUS_EASY: HEALTHREDUCTION_EASYMODE; STATUS_HARD: HEALTHBOOST_HARDCORE"


new entry "_Dragon"
type "Character"
using "_Base"
data "Weight" "6000"
data "StepsType" "Clawed"
data "ArmorType" "None"

----------------------------------------------------------------

Theoretical bg3 stats

new entry "LCC_Dragon_AncientRed"
type "Character"
using "LCC_Dragon_YoungRed"
data "Strength" "30"
data "Dexterity" "10"
data "Constitution" "29"
data "Intelligence" "18"
data "Wisdom" "15"
data "Charisma" "23"
data "Armor" "22"
data "Vitality" "850"
data "GameSize" "Gargantuan"
data "Flags" "Grounded"
data "DefaultBoosts" "ProficiencyBonus(SavingThrow, Dexterity);ProficiencyBonus(SavingThrow, Constitution);ProficiencyBonus(SavingThrow, Wisdom);ProficiencyBonus(SavingThrow, Charisma);ActionResourceBlock(Movement);BlockRegainHP(Undead;Construct)"
data "PersonalStatusImmunities" "PRONE;BURNING;BURNING_LAVA;GRAPPLED;GRAPPLED_NETHERTENTACLE;SG_Prone"
data "ProficiencyBonus" "7"
data "ActionResources" "ActionPoint:1;BonusActionPoint:1;ReactionActionPoint:1;Movement:12"
data "Passives" "AttackOfOpportunity;Darkvision;DarknessRules"
data "FireResistance" "Immune"
data "DarkvisionRange" "30"
data "DifficultyStatuses" "STATUS_EASY: HEALTHREDUCTION_EASYMODE; STATUS_MEDIUM: REDDRAGON_NORMAL; STATUS_HARD: HEALTHBOOST_HARDCORE; STATUS_HARD: DRAGON_RED_RETALIATE_TECHNICAL; STATUS_HARD: REDDRAGON_HARDCORE"

Ancient Red Dragon
Gargantuan dragon, chaotic evil
Armor Class 22 (natural armor)
Hit Points 546 (28d20+252)
Speed 40 ft., climb 40 ft., fly 80 ft.
STR
30 (+10)


DEX
10 (0)


CON
29 (+9)


INT
18 (+4)


WIS
15 (+2)


CHA
23 (+6)

Damage Immunities fire
Senses blindsight 60 ft., darkvision 120 ft.
Saving Throws Dex +7, Con +16, Wis +9, Cha +13
Skills Perception +16, Stealth +7
Languages Common, Draconic
Challenge 24 (62,000 XP)
Proficiency Bonus +7
Legendary Resistance (3/Day). If the dragon fails a saving throw, it can choose to succeed instead.

Actions
Multiattack. The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws.

Bite. Melee Weapon Attack: +17 to hit, reach 15 ft., one target. Hit: 21 (2d10 + 10) piercing damage plus 14 (4d6) fire damage.

Claw. Melee Weapon Attack: +17 to hit, reach 10 ft., one target. Hit: 17 (2d6 + 10) slashing damage.

Tail. Melee Weapon Attack: +17 to hit, reach 20 ft., one target. Hit: 19 (2d8 + 10) bludgeoning damage.

Frightful Presence. Each creature of the dragon’s choice that is within 120 feet of the dragon and aware of it must succeed on a DC 21 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature’s saving throw is successful or the effect ends for it, the creature is immune to the dragon’s Frightful Presence for the next 24 hours.

Fire Breath (Recharge 5-6). The dragon exhales fire in a 90-foot cone. Each creature in that area must make a DC 24 Dexterity saving throw, taking 91 (26d6) fire damage on a failed save, or half as much damage on a successful one.

Legendary Actions
The ancient red dragon can take 3 legendary actions, choosing from the options below. Only one legendary action option can be used at a time, and only at the end of another creature’s turn. The ancient red dragon regains spent legendary actions at the start of its turn.

Detect. The dragon makes a Wisdom (Perception) check.

Tail Attack. The dragon makes a tail attack.

Wing Attack (Costs 2 Actions). The dragon beats its wings. Each creature within 15 ft. of the dragon must succeed on a DC 25 Dexterity saving throw or take 17 (2d6 + 10) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.

----------------------------------------------------------------
BG3 Stats

new entry "Dragon_AdultRed"
type "Character"
using "_Dragon"
data "Strength" "27"
data "Dexterity" "10"
data "Constitution" "25"
data "Intelligence" "16"
data "Wisdom" "13"
data "Charisma" "21"
data "Armor" "19"
data "Vitality" "400"
data "GameSize" "Huge"
data "Flags" "Grounded"
data "DefaultBoosts" "ProficiencyBonus(SavingThrow, Dexterity);ProficiencyBonus(SavingThrow, Constitution);ProficiencyBonus(SavingThrow, Wisdom);ProficiencyBonus(SavingThrow, Charisma);ActionResourceBlock(Movement);BlockRegainHP(Undead;Construct)"
data "PersonalStatusImmunities" "PRONE;BURNING;BURNING_LAVA;GRAPPLED;GRAPPLED_NETHERTENTACLE;SG_Prone"
data "ProficiencyBonus" "6"
data "ActionResources" "ActionPoint:1;BonusActionPoint:1;ReactionActionPoint:1"
data "Passives" "MagicResistance;AttackOfOpportunity;Darkvision;DarknessRules"
data "FireResistance" "Immune"
data "DarkvisionRange" "30"
data "DifficultyStatuses" "STATUS_EASY: HEALTHREDUCTION_EASYMODE; STATUS_MEDIUM: REDDRAGON_NORMAL; STATUS_HARD: HEALTHBOOST_HARDCORE; STATUS_HARD: DRAGON_RED_RETALIATE_TECHNICAL; STATUS_HARD: REDDRAGON_HARDCORE"

Theoretical BG3 Stats

new entry "LCC_Dragon_AdultRed"
type "Character"
using "LCC_Dragon_YoungRed"
data "Strength" "27"
data "Dexterity" "10"
data "Constitution" "25"
data "Intelligence" "16"
data "Wisdom" "13"
data "Charisma" "21"
data "Armor" "19"
data "Vitality" "400"
data "GameSize" "Huge"
data "Flags" "Grounded"
data "DefaultBoosts" "ProficiencyBonus(SavingThrow, Dexterity);ProficiencyBonus(SavingThrow, Constitution);ProficiencyBonus(SavingThrow, Wisdom);ProficiencyBonus(SavingThrow, Charisma);ActionResourceBlock(Movement);BlockRegainHP(Undead;Construct)"
data "PersonalStatusImmunities" "PRONE;BURNING;BURNING_LAVA;GRAPPLED;GRAPPLED_NETHERTENTACLE;SG_Prone"
data "ProficiencyBonus" "6"
data "ActionResources" "ActionPoint:1;BonusActionPoint:1;ReactionActionPoint:1;Movement:12"
data "Passives" "AttackOfOpportunity;Darkvision;DarknessRules"
data "FireResistance" "Immune"
data "DarkvisionRange" "30"
data "DifficultyStatuses" "STATUS_EASY: HEALTHREDUCTION_EASYMODE; STATUS_MEDIUM: REDDRAGON_NORMAL; STATUS_HARD: HEALTHBOOST_HARDCORE; STATUS_HARD: DRAGON_RED_RETALIATE_TECHNICAL; STATUS_HARD: REDDRAGON_HARDCORE"


Adult Red Dragon Real stats
Armor Class 19 (natural armor)
Hit Points 256 (19d12 + 133)
Speed 40 ft., climb 40 ft., fly 80 ft.

STR
27 (+8)
DEX
10 (+0)
CON
25 (+7)
INT
16 (+3)
WIS
13 (+1)
CHA
21 (+5)

Saving Throws DEX +6, CON +13, WIS +7, CHA +11
Skills Perception +13, Stealth +6
Damage Immunities Fire
Senses Blindsight 60 ft., Darkvision 120 ft., Passive Perception 23
Languages Common, Draconic
Challenge 17 (18,000 XP)
Proficiency Bonus +6

Legendary Resistance (3/Day). If the dragon fails a saving throw, it can choose to succeed instead.

Actions
Multiattack. The dragon can use its Frightful Presence. It then makes three attacks: one with its bite and two with its claws.

Bite. Melee Weapon Attack: +14 to hit, reach 10 ft., one target. Hit: 19 (2d10 + 8) piercing damage plus 7 (2d6) fire damage.

Claw. Melee Weapon Attack: +14 to hit, reach 5 ft., one target. Hit: 15 (2d6 + 8) slashing damage.

Tail. Melee Weapon Attack: +14 to hit, reach 15 ft., one target. Hit: 17 (2d8 + 8) bludgeoning damage.

Frightful Presence. Each creature of the dragon’s choice that is within 120 feet of the dragon and aware of it must succeed on a DC 19 Wisdom saving throw or become frightened for 1 minute. A creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. If a creature’s saving throw is successful or the effect ends for it, the creature is immune to the dragon’s Frightful Presence for the next 24 hours.

Fire Breath (Recharge 5–6). The dragon exhales fire in a 60-foot cone. Each creature in that area must make a DC 21 Dexterity saving throw, taking 63 (18d6) fire damage on a failed save, or half as much damage on a successful one.

Legendary Actions
The dragon can take 3 legendary actions, choosing from the options below. Only one legendary action option can be used at a time and only at the end of another creature's turn. The dragon regains spent legendary actions at the start of its turn.

Detect. The dragon makes a Wisdom (Perception) check.

Tail Attack. The dragon makes a tail attack.

Wing Attack (Costs 2 Actions). The dragon beats its wings. Each creature within 10 feet of the dragon must succeed on a DC 22 Dexterity saving throw or take 15 (2d6 + 8) bludgeoning damage and be knocked prone. The dragon can then fly up to half its flying speed.

----------------------------------------------------------------

Theoretical bg3 stats
new entry "Dragon_YoungRed"
type "Character"
using "Dragon_WyrmlingRed"
data "Weight" 3000
data "Strength" "23"
data "Dexterity" "10"
data "Constitution" "21"
data "Intelligence" "14"
data "Wisdom" "11"
data "Charisma" "19"
data "Armor" "18"
data "Vitality" "265"
data "GameSize" "Large"
data "Flags" "Grounded"
data "DefaultBoosts" "ProficiencyBonus(SavingThrow, Dexterity);ProficiencyBonus(SavingThrow, Constitution);ProficiencyBonus(SavingThrow, Wisdom);ProficiencyBonus(SavingThrow, Charisma);ActionResourceBlock(Movement);BlockRegainHP(Undead;Construct)"
data "PersonalStatusImmunities" "PRONE;BURNING;BURNING_LAVA;GRAPPLED;GRAPPLED_NETHERTENTACLE;SG_Prone"
data "ProficiencyBonus" "4"
data "ActionResources" "ActionPoint:1;BonusActionPoint:1;ReactionActionPoint:1:Movement:12"
data "Passives" "AttackOfOpportunity;Darkvision;DarknessRules"
data "FireResistance" "Immune"
data "DarkvisionRange" "30"
data "DifficultyStatuses" "STATUS_EASY: HEALTHREDUCTION_EASYMODE; STATUS_MEDIUM: REDDRAGON_NORMAL; STATUS_HARD: HEALTHBOOST_HARDCORE; STATUS_HARD: DRAGON_RED_RETALIATE_TECHNICAL; STATUS_HARD: REDDRAGON_HARDCORE"


Young Red Dragon
Large dragon, chaotic evil
Armor Class 18 (natural armor)
Hit Points 178 (17d10+85)
Speed 40 ft., climb 40 ft., fly 80 ft.
STR
23 (+6)


DEX
10 (0)


CON
21 (+5)


INT
14 (+2)


WIS
11 (0)


CHA
19 (+4)

Damage Immunities fire
Senses blindsight 30 ft., darkvision 120 ft.
Saving Throws Dex +4, Con +9, Wis +4, Cha +8
Skills Perception +8, Stealth +4
Languages Common, Draconic
Challenge 10 (5,900 XP)
Proficiency Bonus +4
Actions
Multiattack. The dragon makes three attacks: one with its bite and two with its claws.

Bite. Melee Weapon Attack: +10 to hit, reach 10 ft., one target. Hit: 17 (2d10 + 6) piercing damage plus 3 (1d6) fire damage.

Claw. Melee Weapon Attack: +10 to hit, reach 5 ft., one target. Hit: 13 (2d6 + 6) slashing damage.

Fire Breath (Recharge 5-6). The dragon exhales fire in a 30-foot cone. Each creature in that area must make a DC 17 Dexterity saving throw, taking 56 (16d6) fire damage on a failed save, or half as much damage on a successful one.

----------------------------------------------------------------

Wyvern
Large dragon, unaligned
Armor Class 13 (natural armor)
Hit Points 110 (13d10+39)
Speed 20 ft., fly 80 ft.
STR
19 (+4)


DEX
10 (0)


CON
16 (+3)


INT
5 (-3)


WIS
12 (+1)


CHA
6 (-2)

Senses darkvision 60 ft.
Skills Perception +4
Challenge 6 (2,300 XP)
Actions
Multiattack. The wyvern makes two attacks: one with its bite and one with its stinger. While flying, it can use its claws in place of one other attack.

Bite. Melee Weapon Attack: +7 to hit, reach 10 ft., one creature. Hit: 11 (2d6 + 4) piercing damage.

Claws. Melee Weapon Attack: +7 to hit, reach 5 ft., one target. Hit: 13 (2d8 + 4) slashing damage.

Stinger. Melee Weapon Attack: +7 to hit, reach 10 ft., one creature. Hit: 11 (2d6 + 4) piercing damage. The target must make a DC 15 Constitution saving throw, taking 24 (7d6) poison damage on a failed save, or half as much damage on a successful one.

----------------------------------------------------------------


new entry "Dragon_WyrmlingRed"
type "Character"
using "_Dragon"
data "Weight" 1500
data "Strength" "19"
data "Dexterity" "10"
data "Constitution" "17"
data "Intelligence" "12"
data "Wisdom" "11"
data "Charisma" "15"
data "Armor" "17"
data "Vitality" "115"
data "GameSize" "Medium"
data "Flags" "Grounded"
data "DefaultBoosts" "ProficiencyBonus(SavingThrow, Dexterity);ProficiencyBonus(SavingThrow, Constitution);ProficiencyBonus(SavingThrow, Wisdom);ProficiencyBonus(SavingThrow, Charisma);ActionResourceBlock(Movement);BlockRegainHP(Undead;Construct)"
data "PersonalStatusImmunities" "PRONE;BURNING;BURNING_LAVA;GRAPPLED;GRAPPLED_NETHERTENTACLE;SG_Prone"
data "ProficiencyBonus" "2"
data "ActionResources" "ActionPoint:1;BonusActionPoint:1;ReactionActionPoint:1:Movement:9"
data "Passives" "AttackOfOpportunity;Darkvision;DarknessRules"
data "FireResistance" "Immune"
data "DarkvisionRange" "20"
data "DifficultyStatuses" "STATUS_EASY: HEALTHREDUCTION_EASYMODE; STATUS_MEDIUM: REDDRAGON_NORMAL; STATUS_HARD: HEALTHBOOST_HARDCORE; STATUS_HARD: DRAGON_RED_RETALIATE_TECHNICAL; STATUS_HARD: REDDRAGON_HARDCORE"


Red Dragon Wyrmling
Medium dragon, chaotic evil
Armor Class 17 (natural armor)
Hit Points 75 (10d8+30)
Speed 30 ft., climb 30 ft., fly 60 ft.
STR
19 (+4)


DEX
10 (0)


CON
17 (+3)


INT
12 (+1)


WIS
11 (0)


CHA
15 (+2)

Damage Immunities fire
Senses blindsight 10 ft., darkvision 60 ft.
Saving Throws Dex +2, Con +5, Wis +2, Cha +4
Skills Perception +4, Stealth +2
Languages Draconic
Challenge 4 (1,100 XP)
Proficiency Bonus +2
Actions
Bite. Melee Weapon Attack: +6 to hit, reach 5 ft., one target. Hit: 9 (1d10 + 4) piercing damage plus 3 (1d6) fire damage.

Fire Breath (Recharge 5-6). The dragon exhales fire in a 15-foot cone. Each creature in that area must make a DC l3 Dexterity saving throw, taking 24 (7d6) fire damage on a failed save, or half as much damage on a successful one.

----------------------------------------------------------------

Red Guard Drake
Medium dragon, unaligned
Armor Class 14 (natural armor)
Hit Points 52 (7d8+21)
Speed 30 ft., climb 30 ft.
STR
16 (+3)


DEX
11 (0)


CON
16 (+3)


INT
4 (-3)


WIS
10 (0)


CHA
7 (-2)

Damage Resistances fire
Senses darkvision 60 ft.
Skills Perception +2
Languages understands Draconic but can't speak it
Challenge 2 (450 XP)
Actions
Multiattack. The drake attacks twice, once with its bite and once with its tail.

Bite. Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 7 (1d8+3) piercing damage.

Tail. Melee Weapon Attack: +5 to hit, reach 5 ft., one target. Hit: 6 (1d6+3) bludgeoning damage.

Medium



----------------------------------------------------------------



States


# Load save
LoadModule -> LoadSession
LoadSession -> LoadLevel
LoadLevel -> Sync
Sync -> Running


# exit to main
LoreCombatConfigurator: GameStateChanged: Running -> Disconnect
LoreCombatConfigurator: GameStateChanged: Disconnect -> UnloadLevel

# New Game
LoreCombatConfigurator: GameStateChanged: LoadModule -> LoadSession
LoreCombatConfigurator: GameStateChanged: LoadSession -> LoadLevel
LoreCombatConfigurator: GameStateChanged: LoadLevel -> Sync

# Level loaded (before) happens after enter level???



Dragon Expanded Template
```
				<node id="GameObjects">
					<!-- <DevComment>Wyrmling Expanded fully</DevComment> -->
					<attribute id="AiHint" type="guid" value="00000000-0000-0000-0000-000000000000" />
					<attribute id="AnubisConfigName" type="FixedString" value="DefaultMonster" />
					<attribute id="Archetype" type="FixedString" value="dragon" />
					<attribute id="BloodSurfaceType" type="FixedString" value="SurfaceBlood" />
					<attribute id="BloodType" type="FixedString" value="Red" />
					<attribute id="CameraOffset" type="fvec3" value="0 0 0" />
					<attribute id="CanBePickedUp" type="bool" value="False" />
					<attribute id="CanClimbLadders" type="bool" value="True" />
					<attribute id="CharacterVisualResourceID" type="FixedString" value="ddd20049-2ec2-07a7-b4d6-02a38b25d6ac" />
					<attribute id="DeathEffect" type="guid" value="eb0aa43b-fcdc-4ef2-8c54-f60e75074e83" />
					<attribute id="DeathRaycastMaxLength" type="float" value="1.5" />
					<attribute id="DeathRaycastMinLength" type="float" value="1" />
					<attribute id="DisintegratedResourceID" type="FixedString" value="ab98118f-36e4-8a5f-2e91-925e1c9934c2" />
					<attribute id="EquipmentRace" type="guid" value="00000000-0000-0000-0000-000000000000" />
					<attribute id="DisplayName" type="TranslatedString" handle="hd6aa605eg45ceg40a1g8d81gbfde775aea17" version="1" />
					<attribute id="ExplodedResourceID" type="FixedString" value="ab98118f-36e4-8a5f-2e91-925e1c9934c2" />
					<attribute id="Faction" type="guid" value="cfb709b3-220f-9682-bcfb-6f0d8837462e" />
					<attribute id="Flag" type="int32" value="0" />
					<attribute id="FoleyLongResourceID" type="FixedString" value="ae7de912-94bb-ed75-9cd4-8dfec432f26b" />
					<attribute id="FoleyMediumResourceID" type="FixedString" value="fd6409fb-e831-63bf-5ae3-d9f1cb235b0a" />
					<attribute id="GeneratePortrait" type="LSString" value="Icon_Dragon" />
					<attribute id="GroupID" type="uint32" value="0" />
					<attribute id="HasGameplayValue" type="bool" value="False" />
					<attribute id="Icon" type="FixedString" value="baa20049-2ec2-07a7-b4d6-02a38b25d6ac-_(Icon_Dragon)" />
					<attribute id="IsLootable" type="bool" value="True" />
					<attribute id="LadderAttachOffset" type="float" value="0" />
					<attribute id="LadderLoopSpeed" type="float" value="4" />
					<attribute id="LevelName" type="FixedString" value="" />
					<attribute id="LevelOverride" type="int32" value="4" />
					<attribute id="LightChannel" type="uint8" value="5" />
					<attribute id="LightID" type="FixedString" value="782d9d58-f4c5-4500-a16e-b81d737bcc53" />
					<attribute id="MapKey" type="FixedString" value="5ce6e4a8-695a-409e-8ef6-40e6f0684d23" />
					<attribute id="Name" type="LSString" value="LCC_Dragon_WyrmlingRed2" />
					<attribute id="PhysicsTemplate" type="FixedString" value="fc4c05e4-ff0e-3f16-f7d2-5cc04ea2d623" />
					<attribute id="Race" type="guid" value="eed2c9e5-d1b4-4010-99c4-0e96939867a0" />
					<attribute id="RecieveDecal" type="bool" value="False" />
					<attribute id="Scale" type="float" value="0.20" />
					<attribute id="SoundMovementStopEvent" type="FixedString" value="d7d5091b-f262-44f2-6296-0099f0baac88" />
					<attribute id="Stats" type="FixedString" value="LCC_Dragon_WyrmlingRed" />
					<attribute id="Type" type="FixedString" value="character" />
					<attribute id="VisualTemplate" type="FixedString" value="3773c64c-c5a9-9baf-1b85-6bee029ee044" />
					<children>
						<node id="Bounds">
							<children>
								<node id="Bound">
									<attribute id="Height" type="float" value="5.397603" />
									<attribute id="Max" type="fvec3" value="17.095844 5.6624475 14.595627" />
									<attribute id="Min" type="fvec3" value="-17.095844 -0.06285524 -7.787262" />
									<attribute id="Radius" type="float" value="4.0214" />
									<attribute id="Shape" type="uint8" value="2" />
									<attribute id="Type" type="uint8" value="0" />
								</node>
							</children>
						</node>
						<node id="EquipmentTypes" />
						<node id="FootStepInfos">
							<children>
								<node id="FootStepInfo">
									<attribute id="FootBoneName" type="FixedString" value="Dummy_L_Foot_01" />
									<attribute id="FootHearingEffectName" type="LSString" value="" />
									<attribute id="FootPrintEffectName" type="LSString" value="" />
									<attribute id="FootScuffEventName" type="FixedString" value="Movement_Scuff" />
									<attribute id="FootSlideEffectName" type="LSString" value="" />
									<attribute id="FootSmearEffectName" type="LSString" value="" />
									<attribute id="FootSoundEventName" type="FixedString" value="Movement_Footstep" />
									<attribute id="Name" type="LSString" value="Footstep_Front_Left" />
								</node>
								<node id="FootStepInfo">
									<attribute id="FootBoneName" type="FixedString" value="Dummy_R_Foot_01" />
									<attribute id="FootHearingEffectName" type="LSString" value="" />
									<attribute id="FootPrintEffectName" type="LSString" value="" />
									<attribute id="FootScuffEventName" type="FixedString" value="Movement_Scuff" />
									<attribute id="FootSlideEffectName" type="LSString" value="" />
									<attribute id="FootSmearEffectName" type="LSString" value="" />
									<attribute id="FootSoundEventName" type="FixedString" value="Movement_Footstep" />
									<attribute id="Name" type="LSString" value="Footstep_Front_Right" />
								</node>
								<node id="FootStepInfo">
									<attribute id="FootBoneName" type="FixedString" value="Dummy_L_Foot_02" />
									<attribute id="FootHearingEffectName" type="LSString" value="" />
									<attribute id="FootPrintEffectName" type="LSString" value="" />
									<attribute id="FootScuffEventName" type="FixedString" value="Movement_Scuff" />
									<attribute id="FootSlideEffectName" type="LSString" value="" />
									<attribute id="FootSmearEffectName" type="LSString" value="" />
									<attribute id="FootSoundEventName" type="FixedString" value="Movement_Footstep" />
									<attribute id="Name" type="LSString" value="Footstep_Back_Left" />
								</node>
								<node id="FootStepInfo">
									<attribute id="FootBoneName" type="FixedString" value="Dummy_R_Foot_02" />
									<attribute id="FootHearingEffectName" type="LSString" value="" />
									<attribute id="FootPrintEffectName" type="LSString" value="" />
									<attribute id="FootScuffEventName" type="FixedString" value="Movement_Scuff" />
									<attribute id="FootSlideEffectName" type="LSString" value="" />
									<attribute id="FootSmearEffectName" type="LSString" value="" />
									<attribute id="FootSoundEventName" type="FixedString" value="Movement_Footstep" />
									<attribute id="Name" type="LSString" value="Footstep_Back_Right" />
								</node>
							</children>
						</node>
						<node id="ItemList" />
						<node id="LocomotionParams" />
						<node id="OnDeathActions" />
						<node id="PickingPhysics">
							<children>
								<node id="PickingPhysicsTemplates">
									<attribute id="MapKey" type="FixedString" value="CharacterDeadPicking" />
									<attribute id="MapValue" type="FixedString" value="85381a35-f265-b0a0-395a-13ba3381b127" />
								</node>
								<node id="PickingPhysicsTemplates">
									<attribute id="MapKey" type="FixedString" value="CharacterSittingPicking" />
									<attribute id="MapValue" type="FixedString" value="0221b6a7-3aff-f8c6-e6c3-6733f879ffdb" />
								</node>
								<node id="PickingPhysicsTemplates">
									<attribute id="MapKey" type="FixedString" value="CharacterLyingPicking" />
									<attribute id="MapValue" type="FixedString" value="85381a35-f265-b0a0-395a-13ba3381b127" />
								</node>
							</children>
						</node>
						<node id="ScriptConfigGlobalParameters" />
						<node id="SkillList">
							<children>
								<node id="Skill">
									<attribute id="AIFlags" type="uint16" value="0" />
									<attribute id="FallbackStartRound" type="int32" value="-1" />
									<attribute id="LearningStrategy" type="uint8" value="0" />
									<attribute id="MinimumImpact" type="int32" value="0" />
									<attribute id="OnlyCastOnSelf" type="bool" value="False" />
									<attribute id="ScoreModifier" type="float" value="1" />
									<attribute id="Skill" type="FixedString" value="Target_LCC_Bite_DragonWyrmling" />
									<attribute id="SpellCastingAbility" type="uint8" value="0" />
									<attribute id="StartRound" type="int32" value="0" />
									<children>
										<node id="SourceConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
										<node id="TargetConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
									</children>
								</node>
								<node id="Skill">
									<attribute id="AIFlags" type="uint16" value="0" />
									<attribute id="FallbackStartRound" type="int32" value="-1" />
									<attribute id="LearningStrategy" type="uint8" value="0" />
									<attribute id="MinimumImpact" type="int32" value="0" />
									<attribute id="OnlyCastOnSelf" type="bool" value="False" />
									<attribute id="ScoreModifier" type="float" value="1" />
									<attribute id="Skill" type="FixedString" value="Zone_LCC_BreathWeapon_DragonWyrmling_Fire_Cone" />
									<attribute id="SpellCastingAbility" type="uint8" value="0" />
									<attribute id="StartRound" type="int32" value="0" />
									<children>
										<node id="SourceConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
										<node id="TargetConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
									</children>
								</node>
								<node id="Skill">
									<attribute id="AIFlags" type="uint16" value="0" />
									<attribute id="FallbackStartRound" type="int32" value="-1" />
									<attribute id="LearningStrategy" type="uint8" value="0" />
									<attribute id="MinimumImpact" type="int32" value="0" />
									<attribute id="OnlyCastOnSelf" type="bool" value="False" />
									<attribute id="ScoreModifier" type="float" value="1" />
									<attribute id="Skill" type="FixedString" value="Target_LCC_Fly_DragonWyrmling" />
									<attribute id="SpellCastingAbility" type="uint8" value="0" />
									<attribute id="StartRound" type="int32" value="0" />
									<children>
										<node id="SourceConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
										<node id="TargetConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
									</children>
								</node>
								<node id="Skill">
									<attribute id="AIFlags" type="uint16" value="0" />
									<attribute id="FallbackStartRound" type="int32" value="-1" />
									<attribute id="LearningStrategy" type="uint8" value="0" />
									<attribute id="MinimumImpact" type="int32" value="0" />
									<attribute id="OnlyCastOnSelf" type="bool" value="False" />
									<attribute id="ScoreModifier" type="float" value="1" />
									<attribute id="Skill" type="FixedString" value="Projectile_Fly_Spell" />
									<attribute id="SpellCastingAbility" type="uint8" value="0" />
									<attribute id="StartRound" type="int32" value="0" />
									<children>
										<node id="SourceConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
										<node id="TargetConditions">
											<attribute id="MaximumHealthPercentage" type="int32" value="100" />
											<attribute id="MinimumHealthPercentage" type="int32" value="0" />
											<children>
												<node id="Tags" />
											</children>
										</node>
									</children>
								</node>
							</children>
						</node>
						<node id="SpeakerGroupList">
							<children>
								<node id="SpeakerGroup">
									<attribute id="Object" type="guid" value="a84f4caa-5ad9-1572-276a-c74311e373ff" />
								</node>
							</children>
						</node>
						<node id="StatusList">
							<children>
								<node id="Status">
									<attribute id="Object" type="FixedString" value="UNARMEDATTACK_OVERRIDE_DRAGON_WYRMLING" />
								</node>
							</children>
						</node>
						<node id="Tags">
							<children>
								<node id="Tag">
									<attribute id="Object" type="guid" value="90101158-141e-4896-8e60-f8db03f6dde3" />
								</node>
								<node id="Tag">
									<attribute id="Object" type="guid" value="801bd716-0666-4dd5-b449-45ffa9a52a0f" />
								</node>
							</children>
						</node>
						<node id="TradeTreasures" />
						<node id="Treasures" />
					</children>
				</node>
```


Working template!
```
				<node id="GameObjects">
					<!-- <DevComment>Better Wyrmling</DevComment> -->
					<attribute id="MapKey" type="FixedString" value="769ed27c-fa99-4d30-811c-6a0148286f0f" />
					<attribute id="DisplayName" type="TranslatedString" handle="h86828baag567dg478cg99b2g15b39269ee46" version="1" />
					<attribute id="Stats" type="FixedString" value="LCC_Dragon_WyrmlingRed" />
					<attribute id="Name" type="LSString" value="LCC_Dragon_WyrmlingRed" />
					<attribute id="Archetype" type="FixedString" value="dragon" />
					<attribute id="SpellSet" type="FixedString" value="LCC_DragonWyrmlingActions" />
					<attribute id="IsLootable" type="bool" value="True" />
					<attribute id="LevelName" type="FixedString" value="" />
					<attribute id="LevelOverride" type="int32" value="4" />
					<attribute id="Race" type="guid" value="eed2c9e5-d1b4-4010-99c4-0e96939867a0" />
					<attribute id="GeneratePortrait" type="LSString" value="Icon_Dragon" />
					<attribute id="Type" type="FixedString" value="character" />

					<attribute id="Scale" type="float" value="0.20" />
					<!-- <attribute id="ParentTemplateId" type="FixedString" value="08da5063-a761-475a-b66e-1356d7fcab40" /> -->
					<attribute id="ParentTemplateId" type="FixedString" value="08da5063-a761-475a-b66e-1356d7fcab40" />
					<attribute id="VisualTemplate" type="FixedString" value="3773c64c-c5a9-9baf-1b85-6bee029ee044" />
					<!-- <attribute id="CharacterVisualResourceID" type="FixedString" value="baa20049-2ec2-07a7-b4d6-02a38b25d6ac" /> -->
					<attribute id="CharacterVisualResourceID" type="FixedString" value="ddd20049-2ec2-07a7-b4d6-02a38b25d6ac" />
					<!-- <attribute id="DeathEffect" type="guid" value="eb0aa43b-fcdc-4ef2-548c-0ef60775834e" /> -->
					<attribute id="Icon" type="FixedString" value="baa20049-2ec2-07a7-b4d6-02a38b25d6ac-_(Icon_Dragon)" />
					<attribute id="BloodType" type="FixedString" value="Red" />
					<attribute id="ExplodedResourceID" type="FixedString" value="ab98118f-36e4-8a5f-2e91-925e1c9934c2" />
					<attribute id="DisintegratedResourceID" type="FixedString" value="ab98118f-36e4-8a5f-2e91-925e1c9934c2" />
					<attribute id="LightID" type="FixedString" value="782d9d58-f4c5-4500-a16e-b81d737bcc53" />
					<!-- <attribute id="FoleyMediumResourceID" type="FixedString" value="ee60c993-282a-2782-26b0-faf2f90dd4fc" /> -->
					<attribute id="FoleyMediumResourceID" type="FixedString" value="fd6409fb-e831-63bf-5ae3-d9f1cb235b0a" />
					<!-- <attribute id="FoleyLongResourceID" type="FixedString" value="5b0220fb-ca10-d1ee-ea3e-1fd588b6a15d" /> -->
					<attribute id="FoleyLongResourceID" type="FixedString" value="ae7de912-94bb-ed75-9cd4-8dfec432f26b" />
					<attribute id="CanClimbLadders" type="bool" value="True" />
					<!-- <attribute id="PhysicsTemplate" type="FixedString" value="3c6193a8-3a1a-c40e-1e69-f2c98682bd38" /> -->
					<attribute id="PhysicsTemplate" type="FixedString" value="fc4c05e4-ff0e-3f16-f7d2-5cc04ea2d623" />
					<children>
						<node id="Tags">
							<children>
								<node id="Tag">
									<attribute id="Object" type="guid" value="90101158-141e-4896-8e60-f8db03f6dde3" />
								</node>
								<node id="Tag">
									<attribute id="Object" type="guid" value="801bd716-0666-4dd5-b449-45ffa9a52a0f" />
								</node>
							</children>
						</node>
						<node id="SkillList"/>
						<node id="StatusList">
							<children>
								<node id="Status">
									<attribute id="Object" type="FixedString" value="UNARMEDATTACK_OVERRIDE_DRAGON_WYRMLING" />
								</node>
							</children>
						</node>
						<node id="Bounds">
							<children>
								<node id="Bound">
									<attribute id="Height" type="float" value="5.7253017" />
									<attribute id="Max" type="fvec3" value="17.095844 5.662447 14.595627" />
									<attribute id="Min" type="fvec3" value="-17.095844 -0.06285477 -7.7901096" />
									<attribute id="Radius" type="float" value="4.0214" />
									<attribute id="Shape" type="uint8" value="2" />
									<attribute id="Type" type="uint8" value="0" />
								</node>
								<node id="Bound">
									<attribute id="Height" type="float" value="5.7253017" />
									<attribute id="Max" type="fvec3" value="17.095844 5.662447 14.595627" />
									<attribute id="Min" type="fvec3" value="-17.095844 -0.06285477 -7.7901096" />
									<attribute id="Radius" type="float" value="1.7" />
									<attribute id="Shape" type="uint8" value="2" />
									<attribute id="Type" type="uint8" value="1" />
								</node>
								<node id="Bound">
									<attribute id="Height" type="float" value="5.7253017" />
									<attribute id="Max" type="fvec3" value="17.095844 5.662447 14.595627" />
									<attribute id="Min" type="fvec3" value="-17.095844 -0.06285477 -7.7901096" />
									<attribute id="Radius" type="float" value="1.7" />
									<attribute id="Shape" type="uint8" value="2" />
									<attribute id="Type" type="uint8" value="2" />
								</node>
							</children>
						</node>
						<node id="EquipmentTypes" />
						<node id="FootStepInfos" />
						<node id="LocomotionParams" />
					</children>
				</node>
```

SpellAnimation

First is preperate animation, last is return to idle, in betweens are idel before cast, and animations during
, , ; Pre-Attack Animation, , ; Attack Animation, , ; Recover Animation, ,;

data "SpellAnimation" "8b8bb757-21ce-4e02-a2f3-97d55cf2f90b,,;ebd0529b-057e-491f-b124-acfed054728b,,;eeca2c0a-5f81-411e-aad8-b72362322900,,;2b6afcc6-c9c1-4dc1-9904-88bebecb892f,,;7bb52cd4-0b1c-4926-9165-fa92b75876a3,,;e6d40932-427f-4699-a0de-66f124d905b1,,;0b07883a-08b8-43b6-ac18-84dc9e84ff50,,;,,;,,"
That is mulitattack mixed with main hand
Main is 1, multi is 2,3,4 main is the remaining? I think?
The last one was identical for the two
I can get it pulled up and see the exact pattern


Bounds:
type = strong/Normal
shape = masc/femme

CycleConditions
LaughingLeader> That's for cycling between targets, like on a controller.

"Cooldown"
     64 ""
     27 "None"
    106 "OncePerCombat"
     71 "OncePerRest"
    182 "OncePerRestPerItem"
     95 "OncePerShortRest"
     74 "OncePerShortRestPerItem"
    233 "OncePerTurn"
      2 "OncePerTurnNoRealtime"
